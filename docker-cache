#!/bin/bash

set -euo pipefail

# This was adapted from the docker-cache tool on Semaphore CI

destination="${DOCKER_CACHE_DIR:-/tmp/docker-cache}"
image_archive="docker-image-archive.tar"
image_metadata="docker-image-metadata.tar.gz"
cached_image_archive_path="$destination/$image_archive"
cached_image_metadata_path="$destination/$image_metadata"

cache_images() {
	images_to_cache="$(docker images | awk '{print $1, "|", $3, "|", $7$8}' | grep -v '<none>' | tail -n +2)"
	image_ids="$(echo "$images_to_cache" | cut -d \| -f 2 | xargs -n1 docker history -q | grep -v '<missing>' | sort | uniq)"

	if [[ $images_to_cache ]]; then

    printf "Saving the following images:\n$images_to_cache\n\n"
    docker save -o "/tmp/$image_archive" "${image_ids}"

    sudo mv "/tmp/$image_archive" "$destination"
    echo "Images saved to $cached_image_archive_path"

    echo "Saving image metadata ..."
    sudo tar czf "/tmp/$image_metadata" -C /var/lib/docker/image .
    sudo mv "/tmp/$image_metadata" "$destination"

    echo "Done."
  else
    echo "No images found."
  fi
}

restore_images() {
  if [[ -f $cached_image_archive_path ]] && [[ -f $cached_image_metadata_path ]]; then
    echo "Restoring images ..."
    docker load < "$cached_image_archive_path"
    sudo tar xf "$cached_image_metadata_path" -C /var/lib/docker/image
    echo "Images restored."
    docker images
  else
   echo "No image backup found. Please use the 'snapshot' action to create one."
  fi
}

usage() {
	echo "Usage: docker-cache <save|load>"
	exit 1
}

main() {
	cmd="${1:-}"
	[[ $cmd ]] || usage

  case "$cmd" in
    "save" )
      cache_images
      ;;
    "load" )
      restore_images
      ;;
    * )
      echo "'$1' action unknown"
			usage
      ;;
  esac
}

main "${@:-}"
